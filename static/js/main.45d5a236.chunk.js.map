{"version":3,"sources":["components/Form/Form.module.css","components/ContactsList/ContactItem/ContactItem.module.css","components/MainContainer/MainContainer.module.css","components/Title/Title.module.css","components/ContactsList/ContactsList.module.css","components/ContactsFilter/ContactsFilter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducers.js","redux/store.js","components/MainContainer/MainContainer.jsx","components/Title/Title.jsx","services/contactsApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/Form/Form.jsx","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","actions","_state","payload","state","filter","id","isLoading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contacts","contactsReducers","MainContainer","children","className","s","mainContainer","Title","text","title","fetchContacts","a","axios","get","data","fetchAddContact","contact","post","fetchDeleteContact","delete","defaults","baseURL","getContacts","dispatch","addContact","contactId","deleteContact","getItems","getFilter","getIsLoading","getFilteredContacts","createSelector","name","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","selectors","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","resetForm","form","onSubmit","preventDefault","find","alert","operations","htmlFor","type","pattern","required","onChange","input","button","ContactsItem","onDeleteContact","item","item__button","onClick","ContactsList","useEffect","list","map","ContactsFilter","filter__label","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45d5a236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3LEB2\",\"input\":\"Form_input__3HvOj\",\"button\":\"Form_button__MfGTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3hV3m\",\"item__button\":\"ContactItem_item__button__2f3_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MainContainer_mainContainer__j_qr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1mm6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2iYFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"ContactsFilter_filter__label__1UQk_\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport * as actions from './contactsActions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.getContactsSuccess]: (_state, { payload }) => payload,\r\n\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_state, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [actions.getContactsRequest]: () => true,\r\n  [actions.getContactsSuccess]: () => false,\r\n  [actions.getContactsError]: () => false,\r\n\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducers from './contacts/contactsReducers';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: contactsReducers },\r\n  middleware,\r\n});\r\n","import s from '../MainContainer/MainContainer.module.css';\r\n\r\nconst MainContainer = ({ children }) => (\r\n  <div className={s.mainContainer}>{children}</div>\r\n);\r\n\r\nexport default MainContainer;\r\n","import s from '../Title/Title.module.css';\r\n\r\nconst Title = ({ text }) => <h2 className={s.title}>{text}</h2>;\r\n\r\nexport default Title;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3030';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function fetchAddContact(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function fetchDeleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import {\r\n  fetchContacts,\r\n  fetchAddContact,\r\n  fetchDeleteContact,\r\n} from 'services/contactsApi';\r\nimport * as actions from './contactsActions';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(actions.getContactsRequest());\r\n\r\n  try {\r\n    const contacts = await fetchContacts();\r\n    dispatch(actions.getContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contactId => async dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const contact = await fetchAddContact(contactId);\r\n    dispatch(actions.addContactSuccess(contact));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  try {\r\n    await fetchDeleteContact(id);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { selectors, operations } from 'redux/contacts';\r\n\r\nimport s from '../Form/Form.module.css';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(selectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isRepeatName = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isRepeatName) {\r\n      alert(`${name} is already in contacts`);\r\n      return [...contacts];\r\n    }\r\n    dispatch(\r\n      operations.addContact({\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      }),\r\n    );\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label htmlFor={numberInputId}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from '../ContactItem/ContactItem.module.css';\r\n\r\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={s.item}>\r\n    <span>{name}: </span>\r\n    <span>{number} </span>\r\n    <span>\r\n      <button\r\n        className={s.item__button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport ContactsItem from './ContactItem/ContactItem';\r\nimport { operations, selectors } from 'redux/contacts';\r\n\r\nimport s from '../ContactsList/ContactsList.module.css';\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(selectors.getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectors.getIsLoading);\r\n\r\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <div>LOADING...</div>}\r\n      {contacts && (\r\n        <ul className={s.list}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <ContactsItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectors, actions } from 'redux/contacts';\r\n\r\nimport s from '../ContactsFilter/ContactsFilter.module.css';\r\n\r\nconst ContactsFilter = () => {\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import MainContainer from 'components/MainContainer/MainContainer';\r\nimport Title from 'components/Title/Title';\r\nimport Form from 'components/Form/Form';\r\nimport ContactsList from 'components/ContactsList/ContactsList';\r\nimport ContactsFilter from 'components/ContactsFilter/ContactsFilter';\r\n\r\nfunction App() {\r\n  return (\r\n    <MainContainer>\r\n      <Title text=\"Phonebook\" />\r\n      <Form />\r\n\r\n      <Title text=\"Contacts\" />\r\n      <ContactsFilter />\r\n      <ContactsList />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from 'redux/store';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}